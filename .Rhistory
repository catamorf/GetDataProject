x <- 4
class(x)
x <- 4L
class(x)
x <- c(4, TRUE)
class(x)
x <- list(2, "a", "b", TRUE)
x[[2]]
x[2]
x
x <- 1:4
y <- 5
x+y
y <- 5:6
x+Y
x+y
x <- c(17, 14, 4, 5, 13, 12, 10)
x[x>10]
x[x>10]=4
x[x>10]==4
read.csv("Users/james/Documents/hw1_data.csv")
read.csv("/Users/james/Documents/hw1_data.csv")
read.csv("/Users/james/Documents/hw1_data.csv");
data=read.csv("/Users/james/Documents/hw1_data.csv");
data(1:2)
data[1:2]
data[1:2,]
data[100:end,]
data[-2:,
data[-2:,]
data[1:5,]
data[-5:-1,]
data[-5:,]
data[152:153,]
data[47,"Ozone"]
data[47,]
is.NA(data)
is.NaN(data)
isNA
isNA(data)
is.NA(data)
x
is.integer(5)
is.integer(5L)
is.NAN(5)
is.NaN(5)
is.NA(5)
max(data)
max(data$Ozone)
data[[Ozone]]
data["Ozone"
data["Ozone"]
data["Ozone"]
max(data["Ozone"])
max(1,2,3,45)
max(data["Ozone"])
ozone=data["Ozone"]
max(ozone)
ozone
min
max
max(ozone)
ozone=ozone[!is.NA(ozone)]
data["Ozone"]
!is.na(data["Ozone"])
is.na(data["Ozone"])
o=complete.cases(ozone)
bad=is.na(data["Ozone"])
data[bad,"Ozone"]
count
help
help()
ozone
max(ozone)
max(ozone,na.rm=FALSE)
max(ozone,na.rm=TRUE)
max(ozone)
max(ozone,na.rm=T)
min(ozone,na.rm=T)
mean(ozone,na.rm=T)
mean(ozone)
is.na(ozone)
is.na(ozone)==TRUE
x
is.na(x)
count(is.na(x))
good=ozone[!bad]
bad=ozone[bad]
mean(good)
data["Ozone">=31]
data["Ozone">31]
data["Ozone"]>31
ss=data["Ozone">=31,]
ss
ss
ss=data["Ozone"]>=31
ss
data[ss]
data[ss,]
data
ss=data["Ozone"]>=31 and data["Temp"]>90
ss=(data["Ozone"]>=31) and (data["Temp"]>90)
ss=(data["Ozone"]>=31)
ss
mean(ozone of ozone>31)
mean(ozone if ozone>31)
if
;
ozone
ozone>=31
ozone>=31 and ozone<40
ozone>=31 & ozone<40
!is.na(ozone) & ozone>=31 & ozone<40
!is.na(data["Ozone"]) & data["Ozone"]>=31
!is.na(data["Ozone"]) & data["Ozone"]>31 & !is.na(data["Temp"]) & data["Temp"]>90
t18=!is.na(data["Ozone"]) & data["Ozone"]>31 & !is.na(data["Temp"]) & data["Temp"]>90
mean(data[t18,"SolarR"])
mean(data[t18,"Solar.R"])
mean(data[data["Month"=5],"Temp"])
mean(data[data["Month"==5],"Temp"])
mean(data[data["Month"==5,"Temp"])
mean(data[data["Month"]==5,"Temp"])
data[data["Month"]==5,"Temp"]
data[data["Month"]==5,]
data[data["Month"]==5,"Temp"]
mean(data[data["Month"]==5,"Temp"])
mean(data[data["Month"]==6,"Temp"])
max(data[data["Month"]==5,"Ozone"])
max(data[data["Month"]==5,"Ozone"],na.rm=T)
mean(data["Ozone"],na.rm=T)
mean(data[,"Ozone"],na.rm=T)
read.wd()
get.wd()
get_wd()
wd.get()
getwd()
getwd()+"/Documents"
as.string(getwd())+"/Documents"
as.str(getwd())+"/Documents"
as
as.String
as.String()
as.String()
c(getwd(),"/Documents")
c(getwd(),"/Documents",sep="")
"Sfwfewf"+"sdvsdvs"
read.xlsx()
library(xlsx)
install.package(xlsx)
install
package.install
install.packages("xlsx")
library(xlsx)
names()
names(all)
names("all")
names(root)
names(data)
seq(1,5,2)
seq(1,15,2)
persp(x)
persp(ozone)
persp[good]
persp(good)
plot(good)
plot(bad)
image
image(ozone)
dim(ozone) <- c(10,15)
barplot(ozone)
ozone
dim(ozone)
ozone
ozone[2]
ozone[,2]
ozone[1]
ozone[2]
ozone[1]
ozone[1][1]
ozone[1][2]
ozone[1]
barplot(good)
mean(good)
sd(good)
abline(h=mean(good))
abline(h=median(good))
read.table
read.xlsx
data <- read.csv("/Users/james/Documents/hw1_data.csv")
data
mean(data,na.rm=T)
mean(data,na.rm=T)
mean(data)
data[,1]
barplot(data[,1])
barplot(data[,2])
barplot(data[,3])
mean(data[,1])
mean(data[,1],na.rm=T)
mean(data[,2],na.rm=T)
mean(data[,3],na.rm=T)
clear
cl
clc
clear()
clear.screen()
erase.screen()
erase.screen(n=1)
erase.screen(n=)
erase.screen(n=1)
erase.screen(n=0)
quirl()
library(quirl)
print hello
print "hello"
printf "hello"
printf("hello")
print("hello")
print(data)
print(date)
print(date())
print(date())
print("Hello, course!")
q()
q()
library(datasets)
data(iris)
iris[iris$Species=="virginica","Sepal.Length"]
mean(iris[iris$Species=="virginica","Sepal.Length"])
colMeans(iris)
apply
str(apply)
apply(iris, 1, mean)
lapply(iris, mean)
sapply(iris, mean)
apply(iris, 2, mean)
apply(iris[, 1:4], 2, mean)
apply(iris[, 1:4], 1, mean)
apply(iris, 1:4, mean)
apply(iris, c("Sepal.Length","Sepal.Width"), mean)
names(iris)
data(mtcars)
names(mtcars)
nrow(mtcars)
ncol(mtcars)
dim(mtcars)
?mtcars
require(graphics)
pairs(mtcars, main = "mtcars data")
coplot(mpg ~ disp | as.factor(cyl), data = mtcars,
panel = panel.smooth, rows = 1)
?coplot
How can one calculate the average miles per gallon (mpg) by number of cylinders in the car (cyl)?
mean(mtcars[,"mpg"])
mean(mtcars[,"mpg",factor="cyl"])
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
?tapply
tapply(mtcars$cyl, mtcars$mpg, mean)
split(mtcars$mpg, mtcars$cyl)
?split
names(mtcars)
sapply(split(mtcars$hp, mtcars$cyl), mean)
hp <- sapply(split(mtcars$hp, mtcars$cyl), mean)
hp
hp[3]-hp[1]
hp["8"]-hp["4"]
debug(ls)
ls
ls()
Q()
q()
stop()
q
getwd()
dir <- "/Users/james/Documents/GetData/UCI HAR Dataset/"
train <- read.table(paste0(directory,"/train/X_test.txt");
train <- read.table(paste0(directory,"/train/X_test.txt")
)
train <- read.table(paste0(dir,"/train/X_test.txt"))
train <- read.table(paste0(dir,"train/X_test.txt"))
x_train <- read.table(paste0(dir,"train/X_train.txt"))
x_test  <- read.table(paste0(dir,"test/X_test.txt"))
y_train <- read.table(paste0(dir,"train/y_train.txt"))
y_test  <- read.table(paste0(dir,"test/y_test.txt"))
x_all <- rbind(x_train,x_test)
feutures <- read.table(paste0(dir,"feutures.txt"))
features <- read.table(paste0(dir,"features.txt"))
test <- x_all
colnames(test) <- feutures
colnames(test) <- features
names(test)
str(x_all)
str(x_test)
str(x_all)
str(test)
colnames(x_all)
colnames(test)
features
as.factor(features)
as.factor(features[,2])
colnames(test) <- features[,2]
colnames(test)
names(y_all
)
y_all <- rbind(y_train,y_test)
names(y_all)
colnames(y) <- c("Activity")
colnames(y_all) <- c("Activity")
subject_train <- read.table(paste0(dir,"train/subject_train.txt"))
subject_test <- read.table(paste0(dir,"train/subject_test.txt"))
subject_test <- read.table(paste0(dir,"test/subject_test.txt"))
activity_labels <- read.table(paste0(dir,"activity_labels.txt"))
subject_all <- rbind(subject_train,subject_test)
test <- features[,2]
test
grep("mean",test)
grep("mean()",test)
grep("meanFreq",test)
grep("[mean]",test)
grep("mean[()]",test)
grep("mean()",test)
grep("meanFreq",test)
grep("std",test)
grep("std[(]",test)
grep("std",test)
c(grep("mean[(]",test),grep("std",test))
length(c(grep("mean[(]",test),grep("std",test)))
features <- features[,2]
idMeanStd <- c(grep("mean[(]",features),grep("std",features))
id_mean_std <- c(grep("mean[(]",features),grep("std",features))
rm(idMeanStd)
rm(test)
res <- x_all[id_mean_std]
res <- cbind(res,y_all,subject_all)
colnames(x_all) <- features
colnames(y_all) <- c("Activity")
colnames(subject_all)  <- c("Subject")
id_mean_std <- c(grep("mean[(]",features),grep("std",features))
res <- x_all[id_mean_std]
# adding activity and subject columns
res <- cbind(res,y_all,subject_all)
View(x_test)
View(x_test)
tapply(res,c('Activity','Subject'),mean)
tapply(res,list('Activity','Subject'),mean)
tapply(res,as.factor('Activity'),mean)
tapply(res,as.res$Activity,mean)
tapply(res,res$Activity,mean)
tapply(res,res$Activity,mean)
head(res$Activity)
length(res$Activity)
length(res)
mean(res)
mean(res[,1:66])
mean(res[,1])
mean(res[,2])
mean(res[,c(1:66)])
mean(res[,c(1:65)])
mean(res[,c(1:66)],na.rm=T)
mean(res[,c(1,2],na.rm=T)
mean(res[,c(1,2)],na.rm=T)
mean(res[,c(1,2)])
mean(res[,1])
mean(res[,2])
mean(res[,3])
mean(res[,1:3])
mean(res[,1,2,3])
res[1:10,1]
res[1:10,2]
res[1:10,1:2]
res[1:10,1:5]
res[1:10,1:3]
mean(res[1:10,1:3])
lapply(res[1:10,1:3],mean)
sapply(res[1:10,1:3],mean)
tapply(res[1:10,1:3],mean)
tapply(res[1:10,1:3],mean,res$Subject)
tapply(res[1:10,1:3],mean,res$subject)
tapply(res[1:10,1:3],res$subject,mean)
tapply(res[1:10,1:3],res$subject[1:10],mean)
res$subject[1:10]
res$Subject[1:10]
tapply(res[1:10,1:3],res$Subject[1:10],mean)
tapply(res[1:10,1:3],as.factor(res$Subject[1:10]),mean)
fac <- factor(res$Subject[1:10])
fac
tapply(res[1:10,1:3],fac,mean)
tapply(res[1:10,1],fac,mean)
tapply(res[1:10,1:2],fac,mean)
tapply(res[,1],as.factor(res$Subject),mean)
tapply(res[,1],as.factor(res$Activity),mean)
aggregate
aggregate(res,by=list(res$Activity,res$Subject),FUN="mean")
new <- aggregate(res,by=list(res$Activity,res$Subject),FUN="mean")
new <- aggregate(res[1:66],by=list(res$Activity,res$Subject),FUN="mean")
str(x_all)
dim(x_all)
res <- x_all[id_mean_std]
new <- aggregate(res,by=list(y_all,subject_all),FUN="mean")
new <- aggregate(res,by=list(y_all,subject_all),FUN="mean")
dim(res)
dim(y_all)
dim(subject_all)
new <- aggregate(res,by=list(as.factor(y_all),as.factor(subject_all),FUN="mean")
)
new <- aggregate(res,by=list(as.factor(y_all),as.factor(subject_all)),FUN="mean")
dim(res)
str(res)
head(y_all)
as.factor(head(y_all))
head(y_all[,1])
as.factor(head(y_all[,1]))
new <- aggregate(res,by=list(y_all[,1],subject_all[,1]),FUN="mean")
names(new_tidy) <- c('Activity','Subject')
names(new) <- c('Activity','Subject')
Activity <- y_all[,1]
Subject <- subject_all[,1]
Activity <- as.factor(y_all[,1])
Subject <- as.factor(subject_all[,1])
new <- aggregate(res,by=list(Activity,Subject),FUN="mean")
new <- aggregate(res,by=list(y_all[,1],subject_all[,1]),FUN="mean")
names(new)
names(new)[1:2] <- c("Activity","Subject")
new
test <- new[1:30]
test
test <- new[1:10]
test
test <- new[1:10,1:4]
test
merge(test,activity_labels,by.x='Activity',by.y='V1')
merge(new,activity_labels,by.x='Activity',by.y='V1')
new_tidy <- merge(new,activity_labels,by.x='Activity',by.y='V1')
new_tidy <- merge(activity_labels,new,by.y='Activity',by.x='V1')
new_tidy$Activity
new_tidy$V1
new_tidy$V2
rm(new,new_tidy)
new_tidy <- aggregate(x=res,by=list(y_all[,1],subject_all[,1]),FUN="mean")
merge(activity_labels,new_tidy,by.x=1,by.y=1)
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1)
names(test)[1:3] <- c("ActivityCode","Activity","Subject")
write.table(test,file=paste0(dir,"test.txt") )
write.table(test,file=paste0(dir,"test.txt"),row.names=F)
write.table(test,file=paste0(dir,"MeansByActivityAndSubject.txt"),row.names=F)
write.table(test,file=paste0(dir,"MeansByActivityAndSubject.txt"),row.names=F,sep=",")
merge(activity_labels,new_tidy,by.x=1,by.y=1,sort=T)
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1,sort=T)
View(test)
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1,sort=F)
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1,sort=T)
test <- 2
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1,sort=T)
View(test)
View(test)
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1,sort=TRUE)
View(test)
View(test)
test <- merge(activity_labels,new_tidy,by.x=1,by.y=1)
View(test)
View(test)
new_tidy <- aggregate(x=res,by=list(y_all[,1],subject_all[,1]),FUN="mean")
# now we have new dataset with columns:  1 - activity code, 2 - subject, 3-68 - data variables
# so i have to replace activity codes with activity names
# i'm using column index instead of column names, as column names like "Group.1" assigned automaticly by function and may be changed in future versions
# so i'm merging activity labels with resulting table by activity id (column 1 in activity_labels and column 1 in new_tidy dataset)
new_tidy <- merge(activity_labels,new_tidy,by.x=1,by.y=1)
# properly name columns:
names(new_tidy)[1:3] <- c("ActivityCode","Activity","Subject")
# write new dataset into provided source data directory
write.table(new_tidy,file=paste0(dir,"MeansByActivityAndSubject.txt"),row.names=F)
write.table(new_tidy,file=paste0(dir,"MeansByActivityAndSubject.txt"),row.names=F,sep=",")
